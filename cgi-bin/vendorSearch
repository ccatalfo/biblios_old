#!/usr/bin/perl
use strict;
use warnings;
use Net::Amazon;
use CGI qw/:all/;
use CGI::Carp;
use XML::Writer;
use Cache::File;

my $cgi = new CGI();
my $cache = Cache::File->new(
	cache_root => '/tmp',
	lock_level => Cache::File::LOCK_LOCAL(),
	default_expires => '30 min',
) or die "Couldn't write to cache temp file";

my $xmlresponse = '';
my $xmlwriter = new XML::Writer(OUTPUT => \$xmlresponse, NEWLINES=>0);
$xmlwriter->startTag('vendorSearchResp');

my $searchtype = $cgi->param('searchtype');
my $query = $cgi->param('query');
my $start = $cgi->param('start') || 0;;
my $limit = $cgi->param('limit') || 20;
my @vendors = split(' ', $cgi->param('vendors'));
warn("seachtype: $searchtype");
warn("query: $query");
warn("start: $start");
warn("limit: $limit");
warn("vendors: " . join(' ' , @vendors));

print $cgi->header( -type => 'text/xml' );
foreach my $vendor (@vendors) {
	if( $vendor eq 'Amazon') {
		# figure out correct power param based on query passed in
		my $powerquer = 'keywords';
		if( $query eq '' ) {
			$powerquer = 'keywords';
		}
		elsif( $query eq 'ti' ) {
			$powerquer = 'title';
		}
		elsif( $query eq 'au' ) {
			$powerquer = 'author';
		}
		elsif ($query eq 'su' ) {
			$powerquer = 'subject';
		}
		elsif ($query eq 'isbn' ) {
			$powerquer = 'isbn';
		}

		# figure out how many pages to req from amazon based on 20 hits per page
		# divide start value by 20 and add 1.5 to round up
		my $max_pages = int(($start/20)+1.5);
		warn("max_pages to req from amazon: $max_pages");
		my $ua = Net::Amazon->new(
			token => '14RFHHPWH7B3BHDSTDR2',
			cache => $cache,
			#max_pages => $max_pages
		);
		my $resp = $ua->search(power => "$powerquer:$query", mode => 'books');
		if( $resp->is_success()) {
			$xmlwriter->startTag('vendor', 'name'=>'Amazon');
			$xmlwriter->dataElement('count', $resp->total_results() );
			warn('total records found: ' . $resp->total_results() );
			my $recordCount = 0;
			my $stoppingPoint = $start+$limit;
			warn("record to stop at: $stoppingPoint");
			for( $resp->properties() ) {
				warn("record number $recordCount");
				if( ($recordCount >= $start) && ($recordCount < $stoppingPoint )) {
					warn("printing xml data for record number $recordCount");
					$xmlwriter->startTag('item');
					$xmlwriter->dataElement('title', $_->title() );
					$xmlwriter->dataElement('authors', join( ' ', $_->authors()) );
					$xmlwriter->dataElement('publisher', $_->publisher() );
					$xmlwriter->dataElement('pubdate', $_->publication_date() );
					$xmlwriter->dataElement('release_date', $_->ReleaseDate() );
					$xmlwriter->dataElement('image_url_medium', $_->ImageUrlMedium() );
					$xmlwriter->dataElement('price', $_->OurPrice() );
					$xmlwriter->dataElement('description', $_->ProductDescription() );
					$xmlwriter->dataElement('total_offers', $_->TotalOffers() );
					$xmlwriter->dataElement('asin', $_->Asin() );
					$xmlwriter->dataElement('availability', $_->Availability() );
					$xmlwriter->dataElement('edition', $_->edition() );
					$xmlwriter->endTag('item');
				}
				$recordCount++;
			}
			$xmlwriter->endTag('vendor');
		}
		else {

		}
	}
}
$xmlwriter->endTag('vendorSearchResp');
$xmlwriter->end();
print $xmlresponse;
